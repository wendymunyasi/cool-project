/*
    TUTORIAL.MNU
    This form is part of the dBBASE SE tutorial project. 
*/
** END HEADER -- do not remove this line
//
// Generated on 05/05/2001
//
parameter formObj
new TUTORIALMENU(formObj, "root")

class TUTORIALMENU(formObj, name) of MENUBAR(formObj, name)
   this.FILE = new MENU(this)
   with (this.FILE)
      text = "&File"
   endwith

   this.FILE.OPEN = new MENU(this.FILE)
   with (this.FILE.OPEN)
      text = "&Open"
   endwith

   this.FILE.OPEN.CUSTOMERS = new MENU(this.FILE.OPEN)
   with (this.FILE.OPEN.CUSTOMERS)
      onClick = class::CUSTOMERS_ONCLICK
      text = "Customers"
   endwith

   this.FILE.OPEN.INVENTORY = new MENU(this.FILE.OPEN)
   with (this.FILE.OPEN.INVENTORY)
      onClick = class::INVENTORY_ONCLICK
      text = "Inventory"
   endwith

   this.FILE.OPEN.SUPPLIERS = new MENU(this.FILE.OPEN)
   with (this.FILE.OPEN.SUPPLIERS)
      onClick = class::SUPPLIERS_ONCLICK
      text = "Suppliers"
   endwith

   this.FILE.OPEN.INVOICES = new MENU(this.FILE.OPEN)
   with (this.FILE.OPEN.INVOICES)
      onClick = class::INVOICES_ONCLICK
      text = "Invoices"
   endwith

   this.FILE.OPEN.LOOKUPS = new MENU(this.FILE.OPEN)
   with (this.FILE.OPEN.LOOKUPS)
      text = "Lookups"
   endwith

   this.FILE.OPEN.LOOKUPS.STATE = new MENU(this.FILE.OPEN.LOOKUPS)
   with (this.FILE.OPEN.LOOKUPS.STATE)
      onClick = class::STATE_ONCLICK
      text = "State"
   endwith

   this.FILE.OPEN.LOOKUPS.COUNTRY = new MENU(this.FILE.OPEN.LOOKUPS)
   with (this.FILE.OPEN.LOOKUPS.COUNTRY)
      onClick = class::COUNTRY_ONCLICK
      text = "Country"
   endwith

   this.FILE.CLOSE = new MENU(this.FILE)
   with (this.FILE.CLOSE)
      onClick = class::CLOSE_ONCLICK
      text = "&Close"
   endwith

   this.FILE.SEPARATOR1 = new MENU(this.FILE)
   with (this.FILE.SEPARATOR1)
      text = ""
      separator = true
   endwith

   this.FILE.EXIT = new MENU(this.FILE)
   with (this.FILE.EXIT)
      onClick = class::EXIT_ONCLICK
      text = "E&xit"
   endwith

   this.REPORTS = new MENU(this)
   with (this.REPORTS)
      text = "&Reports"
   endwith

   this.REPORTS.SUPPLIER = new MENU(this.REPORTS)
   with (this.REPORTS.SUPPLIER)
      onClick = class::SUPPLIER_ONCLICK
      text = "Supplier Information"
   endwith

   this.REPORTS.INVENTORY = new MENU(this.REPORTS)
   with (this.REPORTS.INVENTORY)
      onClick = class::INVENTORY_ONCLICK1
      text = "Inventory Summary"
   endwith

   this.REPORTS.STATEMENTS = new MENU(this.REPORTS)
   with (this.REPORTS.STATEMENTS)
      onClick = class::STATEMENTS_ONCLICK
      text = "Customer Statements"
   endwith

   this.REPORTS.SEPARATOR5 = new MENU(this.REPORTS)
   with (this.REPORTS.SEPARATOR5)
      text = ""
      separator = true
   endwith

   this.REPORTS.LABELS = new MENU(this.REPORTS)
   with (this.REPORTS.LABELS)
      onClick = class::LABELS_ONCLICK
      text = "Customer Address Labels"
   endwith

   this.WINDOW = new MENU(this)
   with (this.WINDOW)
      text = "&Window"
   endwith

   this.WINDOW.CLOSEALL = new MENU(this.WINDOW)
   with (this.WINDOW.CLOSEALL)
      onClick = {; close forms}
      text = "Close &All"
   endwith

   this.HELP = new MENU(this)
   with (this.HELP)
      text = "&Help"
   endwith

   this.HELP.ABOUT = new MENU(this.HELP)
   with (this.HELP.ABOUT)
      onClick = class::ABOUT_ONCLICK
      text = "&About Tutorial"
   endwith

   this.windowMenu = this.window

   function ABOUT_onClick
      set procedure to about.wfm additive
      f = new aboutForm()
      f.readModal()
      close procedure about.wfm
   return

   function CLOSE_onClick
      // close current window
      if type( "_app.framewin.currentForm" ) # "U" AND;
         type( "_app.framewin.currentForm" ) # "NULL"
         _app.framewin.currentForm.close()
      else
         msgbox( "The currently active form cannot be closed with this option.",;
                 "Can't do it!", 64 )
      endif
   return

   function COUNTRY_onClick
      // open the Country form:
      local f
      f = new CountryForm()
      class::openForm( f )
   return

   function CUSTOMERS_onClick
      // open the customer form:
      local f
      f = new CustomerForm()
      // call the code we created elsewhere
      // to actually open the form
      class::openForm( f )
   return

   function EXIT_onClick
   return ( _app.framewin.app.close() )

   function INVENTORY_onClick
      // open the Inventory form:
      local f
      f = new InventoryForm()
      class::openForm( f )
   return

   function INVENTORY_onClick1
      set procedure to inventory.rep additive 
      fPreview = new PreviewForm()
      fPreview.bModal = true 
      fPreview.viewer.fileName := "inventory.rep" 
      fPreview.Open()  
   return

   function INVOICES_onClick
      // open the Invoice form:
      local f
      f = new InvoiceForm()
      class::openForm( f )
   return

   function LABELS_onClick
      set procedure to customer.lab additive
      fPreview = new PreviewForm()
      fPreview.bModal = true 
      fPreview.viewer.fileName := "customer.lab" 
      fPreview.Open()
   return

   function STATE_onClick
      // open the State form:
      local f
      f = new StateForm()
      class::openForm( f )
   return

   function STATEMENTS_onClick
      set procedure to getdates.wfm additive
      local f
      f = new getdatesForm()
      f.readModal()
      close procedure getdates.wfm
      return

   function SUPPLIER_onClick
      set procedure to suppliers.rep additive
      fPreview = new PreviewForm()
      // to open with ReadModal()
      fPreview.bModal = true 
      fPreview.viewer.fileName := "suppliers.rep" 
      fPreview.Open()
   return

   function SUPPLIERS_onClick
      // open the Supplier form:
      local f
      f = new SupplierForm()
      class::openForm( f )
   return

   function OpenForm( oForm )
     // set the top/left properties so the form isn't
     // *right* on top of the current one ...
     if type( "_app.framewin.currentForm" ) == "O"
        oForm.top  := _app.framewin.currentForm.top + 2
        oForm.left := _app.framewin.currentForm.left + 2
     else
        oForm.top  := 0
        oForm.left := 10
     endif

     oForm.open()
     oForm.setFocus()
   return
endclass
