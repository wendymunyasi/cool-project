** END HEADER -- do not remove this line
//
// Generated on 21/04/2021
//
parameter bModal
local f
f = new invoiceForm()
if (bModal)
   f.mdi = false // ensure not MDI
   f.readModal()
else
   f.open()
endif

class invoiceForm of BASECFORM from "Base.cfm"
   set procedure to :FormControls:seeker.cc additive
   set procedure to MyControls.cc additive
   set procedure to invoice.dmd additive
   with (this)
      onOpen = class::FORM_ONOPEN
      height = 35.8636
      left = 13.0
      top = 1.7727
      width = 97.1429
      text = "Invoices"
   endwith

   this.INVOICEDATAMODULE1 = new INVOICEDATAMODULE()
   this.INVOICEDATAMODULE1.parent = this
   with (this.INVOICEDATAMODULE1)
      left = 76.0
      top = 3.0
      width = 14.0
      height = 1.0
   endwith

   with (this.MYTITLETEXT1)
      text = "Invoices"
   endwith

   this.MYTEXTLABEL1 = new MYTEXTLABEL(this)
   with (this.MYTEXTLABEL1)
      height = 1.0
      left = 14.0
      top = 2.0
      width = 12.0
      text = "Customers:"
   endwith

   this.SEEKER1 = new SEEKER(this)
   with (this.SEEKER1)
      height = 1.0
      left = 30.0
      top = 2.0
      width = 43.0
   endwith

   this.MYGRID1 = new MYGRID(this)
   with (this.MYGRID1)
      dataLink = form.invoicedatamodule1.customer1.rowset
      columns["COLUMN1"] = new GRIDCOLUMN(form.MYGRID1)
      with (columns["COLUMN1"])
         dataLink = form.invoicedatamodule1.customer1.rowset.fields["first name"]
         editorType = 1	// EntryField
         width = 28.5714
      endwith
      columns["COLUMN2"] = new GRIDCOLUMN(form.MYGRID1)
      with (columns["COLUMN2"])
         dataLink = form.invoicedatamodule1.customer1.rowset.fields["last name"]
         editorType = 1	// EntryField
         width = 28.5714
      endwith
      columns["COLUMN3"] = new GRIDCOLUMN(form.MYGRID1)
      with (columns["COLUMN3"])
         dataLink = form.invoicedatamodule1.customer1.rowset.fields["city"]
         editorType = 1	// EntryField
         width = 28.7143
      endwith
      with (columns["COLUMN1"].headingControl)
         value = "First Name"
      endwith

      with (columns["COLUMN2"].headingControl)
         value = "Last Name"
      endwith

      with (columns["COLUMN3"].headingControl)
         value = "City"
      endwith

      height = 7.5
      left = 8.0
      top = 4.0
      width = 80.0
   endwith

   this.INVOICECONTAINER = new MYCONTAINER(this)
   with (this.INVOICECONTAINER)
      left = 14.0
      top = 12.5
      width = 65.0
      height = 9.5
   endwith

   this.INVOICECONTAINER.MYTEXTLABEL1 = new MYTEXTLABEL(this.INVOICECONTAINER)
   with (this.INVOICECONTAINER.MYTEXTLABEL1)
      height = 1.0
      left = 7.8571
      top = 0.9545
      width = 12.0
      text = "Invoices:"
      pageno = 0
   endwith

   this.INVOICECONTAINER.INVOICEBUTTONCONTAINER = new MYCONTAINER(this.INVOICECONTAINER)
   with (this.INVOICECONTAINER.INVOICEBUTTONCONTAINER)
      left = 18.8571
      top = -0.0455
      width = 37.0
      height = 2.5
      borderStyle = 3	// None
      pageno = 0
   endwith

   this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.ADDINVOICE = new MYPUSHBUTTON(this.INVOICECONTAINER.INVOICEBUTTONCONTAINER)
   with (this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.ADDINVOICE)
      onClick = class::ADDINVOICE_ONCLICK
      height = 1.5
      left = 1.8571
      top = 0.4545
      width = 5.0
      text = ""
      upBitmap = "RESOURCE:2 PS_APPEND"
      speedTip = '"Add Invoice"'
      pageno = 0
   endwith

   this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.EDITINVOICE = new MYPUSHBUTTON(this.INVOICECONTAINER.INVOICEBUTTONCONTAINER)
   with (this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.EDITINVOICE)
      onClick = class::EDITINVOICE_ONCLICK
      height = 1.5
      left = 8.0
      top = 0.5
      width = 5.0
      text = ""
      upBitmap = "RESOURCE:2 PS_EDIT"
      speedTip = '"Edit This Invoice"'
      pageno = 0
   endwith

   this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.DELETEINVOICE = new MYPUSHBUTTON(this.INVOICECONTAINER.INVOICEBUTTONCONTAINER)
   with (this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.DELETEINVOICE)
      onClick = class::DELETEINVOICE_ONCLICK
      height = 1.5
      left = 14.0
      top = 0.5
      width = 5.0
      text = ""
      upBitmap = "RESOURCE:2 PS_DELETE"
      speedTip = '"Delete This Invoice"'
      pageno = 0
   endwith

   this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.PRINTINVOICE = new MYPUSHBUTTON(this.INVOICECONTAINER.INVOICEBUTTONCONTAINER)
   with (this.INVOICECONTAINER.INVOICEBUTTONCONTAINER.PRINTINVOICE)
      onClick = class::PRINTINVOICE_ONCLICK
      height = 1.5
      left = 20.0
      top = 0.5
      width = 5.0
      text = ""
      upBitmap = "RESOURCE:2 PS_PRINT"
      speedTip = '"Print this Invoice"'
      pageno = 0
   endwith

   this.INVOICECONTAINER.MYGRID1 = new MYGRID(this.INVOICECONTAINER)
   with (this.INVOICECONTAINER.MYGRID1)
      dataLink = form.invoicedatamodule1.invoice1.rowset
      columns["COLUMN1"] = new GRIDCOLUMN(form.INVOICECONTAINER.MYGRID1)
      with (columns["COLUMN1"])
         dataLink = form.invoicedatamodule1.invoice1.rowset.fields["order date"]
         editorType = 3	// SpinBox
         width = 18.2857
      endwith
      columns["COLUMN2"] = new GRIDCOLUMN(form.INVOICECONTAINER.MYGRID1)
      with (columns["COLUMN2"])
         dataLink = form.invoicedatamodule1.lineitem1.rowset.fields["invoice id"]
         editorType = 3	// SpinBox
         width = 18.5714
      endwith
      with (columns["COLUMN1"].editorControl)
         rangeMax = {20/03/1998}
         rangeMin = {10/12/1997}
      endwith

      with (columns["COLUMN1"].headingControl)
         value = "Order Date"
      endwith

      with (columns["COLUMN2"].editorControl)
         rangeMax = 100
         rangeMin = 1
      endwith

      with (columns["COLUMN2"].headingControl)
         value = "Invoice ID"
      endwith

      pageno = 0
      height = 5.5
      left = 11.8571
      top = 2.4545
      width = 40.0
   endwith

   this.LINEITEMCONTAINER = new MYCONTAINER(this)
   with (this.LINEITEMCONTAINER)
      left = 8.0
      top = 25.0
      width = 80.0
      height = 9.5
   endwith

   this.LINEITEMCONTAINER.MYTEXTLABEL1 = new MYTEXTLABEL(this.LINEITEMCONTAINER)
   with (this.LINEITEMCONTAINER.MYTEXTLABEL1)
      height = 1.0
      left = 7.8571
      top = 0.9545
      width = 12.0
      text = "Line Items:"
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER = new MYCONTAINER(this.LINEITEMCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER)
      left = 20.8571
      top = -0.0455
      width = 19.0
      height = 2.5
      borderStyle = 3	// None
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER.ADDLINEITEM = new MYPUSHBUTTON(this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER.ADDLINEITEM)
      onClick = class::ADDLINEITEM_ONCLICK
      height = 1.5
      left = 0.8571
      top = 0.4545
      width = 5.0
      text = ""
      upBitmap = "RESOURCE:2 PS_APPEND"
      speedTip = '"Add new Line Item"'
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER.EDITLINEITEM = new MYPUSHBUTTON(this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER.EDITLINEITEM)
      onClick = class::EDITLINEITEM_ONCLICK
      height = 1.5
      left = 6.8571
      top = 0.4545
      width = 5.0
      text = ""
      upBitmap = "RESOURCE:2 PS_EDIT"
      statusMessage = '"Edit this Line Item"'
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER.DELETELINEITEM = new MYPUSHBUTTON(this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER)
   with (this.LINEITEMCONTAINER.LINEITEMBUTTONCONTAINER.DELETELINEITEM)
      onClick = class::DELETELINEITEM_ONCLICK
      height = 1.5
      left = 12.8571
      top = 0.4545
      width = 5.0
      text = ""
      upBitmap = "RESOURCE:2 PS_DELETE"
      speedTip = '"Delete this Line Item"'
      pageno = 0
   endwith

   this.LINEITEMCONTAINER.MYGRID1 = new MYGRID(this.LINEITEMCONTAINER)
   with (this.LINEITEMCONTAINER.MYGRID1)
      dataLink = form.invoicedatamodule1.lineitem1.rowset
      columns["Column1"] = new GRIDCOLUMN(form.LINEITEMCONTAINER.MYGRID1)
      with (columns["Column1"])
         dataLink = form.invoicedatamodule1.lineitem1.rowset.fields["item id"]
         editorType = 4	// ComboBox
         width = 28.8571
      endwith
      columns["Column2"] = new GRIDCOLUMN(form.LINEITEMCONTAINER.MYGRID1)
      with (columns["Column2"])
         dataLink = form.invoicedatamodule1.lineitem1.rowset.fields["qty"]
         editorType = 3	// SpinBox
         width = 31.2857
      endwith
      with (columns["Column1"].editorControl)
         style = 1	// DropDownList
      endwith

      with (columns["Column1"].headingControl)
         value = "Description"
      endwith

      with (columns["Column2"].editorControl)
         picture = "999"
         rangeMax = 100
         rangeMin = 1
      endwith

      with (columns["Column2"].headingControl)
         value = "Qty"
      endwith

      pageno = 0
      height = 5.5
      left = 7.8571
      top = 2.9545
      width = 64.0
   endwith

   this.rowset = this.invoicedatamodule1.customer1.rowset

   function ADDINVOICE_onClick()
      local fInvoice
		set procedure to invoiceEdit.wfm additive
		fInvoice = new InvoiceEditForm()
		// add a customer property (note that the form.rowset is pointing
		// to the customer rowset)
		fInvoice.customerID = form.rowset.fields["customer id"].value
		// let the invoice form know we're in append mode
		fInvoice.Mode = "Append"
		// open the form:
		fInvoice.readModal()
		// close the procedure file:
		close procedure invoiceEdit.wfm
		if form.invoicedatamodule1.lineitem1.rowset.endOfSet
			// go to last row, which is the one we just added
			form.invoicedatamodule1.invoice1.rowset.last()
			// because an invoice is useless without a line item
			class::AddLineItem_onClick()
		endif
		// refresh the controls on screen ...
		form.invoicedatamodule1.invoice1.rowset.refreshControls()
      return

   function ADDLINEITEM_onClick()
      local fLineItem
		// don't allow if there is no invoice
		if not form.invoicedatamodule1.invoice1.rowset.endOfSet
			set procedure to LineItemEdit.wfm additive
			fLineItem = new LineItemEditForm()
			// add some custom properties
			fLineitem.Mode = "Append"
			fLineitem.InvoiceID = ;
				form.invoicedatamodule1.INVOICE1.rowset.fields["Invoice ID"].value
			// open the form
			fLineitem.readModal()
			close procedure LineItemEdit.wfm
			form.invoicedatamodule1.LINEITEM1.rowset.last()
			form.invoicedatamodule1.LINEITEM1.rowset.refreshControls()
		else
			msgbox("There is no invoice to assign line items to!", ;
						"Can't do that!", 16)
		endif
      return

   function DELETEINVOICE_onClick()
      // shorten the rowset reference:
		r = form.invoicedatamodule1.INVOICE1.rowset
		// check for endOfSet
		if r.endOfSet
			msgbox("Cannot delete -- there are no rows to delete!",;
			"Can't do that!", 16)
		else
			// otherwise check to see if they really want to delete this row
			if (msgbox("You are about to delete the current row.";
							+ chr(13);
							+ "Click Yes to delete the current row.", ;
								"Alert", 4) == 6)
				// delete it
				r.delete()
				
				// move to previous row, unless we're at the first one, and then
				// step off the endOfSet marker ...
				if (r.next(-1))
					r.next()
				endif
			endif
		endif
      return

   function DELETELINEITEM_onClick()
      // shorten the rowset reference:
		r = form.invoicedatamodule1.LINEITEM1.rowset
		// check for endOfSet
		if r.endOfSet
			msgbox("Cannot delete -- there are no rows to delete!",;
			"Can't do that!", 16)
		else
			// otherwise check to see if they really want to delete this row
			if (msgbox("You are about to delete the current row.";
							+ chr(13);
							+ "Click Yes to delete the current row.", ;
								"Alert", 4) == 6)
				// delete it
				r.delete()
				
				// move to previous row, unless we're at the first one, and then
				// step off the endOfSet marker ...
				if (r.next(-1))
					r.next()
				endif
			endif
		endif
      return

   function EDITINVOICE_onClick()
		// check to make sure we have a row to edit:
		if not form.invoicedatamodule1.invoice1.rowset.endOfSet
			local fInvoice
			set procedure to invoiceEdit.wfm additive
			fInvoice = new InvoiceEditForm()
			// add a customer property (note that the form.rowset is pointing
			// to the customer rowset)
			fInvoice.customerID = form.rowset.fields["customer id"].value
			fInvoice.InvoiceID = ;
				form.invoicedatamodule1.INVOICE1.rowset.fields["Invoice ID"].value
			// let the invoice form know we're in edit mode
			fInvoice.Mode = "Edit"
			// open the form:
			fInvoice.readModal()
			// close the procedure file:
			close procedure invoiceEdit.wfm
			// refresh the controls on screen ...
			form.invoicedatamodule1.invoice1.rowset.refreshControls()
		else
			msgbox("There is nothing to edit oo!", "Can't do that!", 16)
		endif
      return

   function EDITLINEITEM_onClick()
      local rLineItem
		// check to make sure we have a row to edit
		rLineItem = form.invoicedatamodule1.LINEITEM1.rowset
		if not rLineItem.endOfSet
			local fLineItem
			set procedure to LineItemEdit.wfm additive
			fLineitem = new LineItemEditForm()
			// add some custom properties
			fLineItem.Mode = "Edit"
			fLineitem.InvoiceID = ;
				form.invoicedatamodule1.INVOICE1.rowset.fields["Invoice ID"].value
			// in the next statement we are getting the actual item's ID as
			// opposed to the description, which we'd normally get if we just used
			// the field's value property ...
			fLineitem.ItemID = ;
				rLineItem.fields["Item ID"].lookupRowset.fields[1].value
			// open the form
			fLineitem.readModal()
			close procedure LineItemEdit.wfm
			form.invoicedatamodule1.LINEITEM1.rowset.refreshControls()
		else
			msgbox("There is nothing to edit!", "Can't do that!", 16)
		endif
      return

   function PRINTINVOICE_onClick()
      // code will go here.
      return

   function form_onOpen()
      // call the onOpen method of the dataform custom form...
		set procedure to dataform.cfm additive
		dataformcForm::form_onOpen()
      return

endclass

